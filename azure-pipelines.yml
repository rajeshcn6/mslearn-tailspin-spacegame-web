trigger:
- gbjdeploy

pool:
  name: 'My_agent_pool'
  demands:
    - npm
    - Agent.Name -equals winlocal

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.100'
  #Version.MajorMinor: '5.0'
  #EnvVar: '$(Build.BuildNumber)'
  #Major: '2'
  #Minor: '2'
  #Patch: '$(Build.BuildNumber)'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

#- task: gulp@1
#  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'
    
- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true
    
- task: DotNetCoreCLI@2
  displayName: 'Pack nuget'
  inputs:
    command: pack
    packagesToPack: '**/*.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Build.BuildNumber
    #variables:
      #Version.MajorMinor: '1.0'
      #Version.Revision: $[counter(variables['Version.MajorMinor'], 0)]
    #majorVersion: '$(Major)'
    #minorVersion: '$(Minor)'
    #patchVersion: '$(Patch)'
    allowPackageConflicts: true
    
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    condition: succeeded()
- task: NuGetCommand@2
  displayName: 'nuget push'
  inputs:
    command: 'push'
    #feedsToUse: 'select'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'Sandesh2026/gbj-artifacts'
    #versioningScheme: 'on'
    #versioningScheme: byPrereleaseNumber
    #majorVersion: '$(Major)'
    #minorVersion: '$(Minor)'
    #patchVersion: '$(Patch)'
    allowPackageConflicts: true
- task: Docker@2
  displayName: Build an image
  inputs:
    # repository: $(imageName)
    command: build
    # Dockerfile: **/Dockerfile
